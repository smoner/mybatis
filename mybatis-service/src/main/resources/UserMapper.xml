<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis.service.dao.UserDao">
    <!--设置domain类和数据库中表的字段一一对应，注意数据库字段和domain类中的字段名称不致，此处一定要！-->
    <resultMap id="BaseResultMap" type="mybatis.service.domain.User">
        <id column="USER_ID" property="userId" jdbcType="INTEGER" />
        <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
        <result column="USER_PASSWORD" property="userPassword" jdbcType="VARCHAR" />
        <result column="USER_EMAIL" property="userEmail" jdbcType="VARCHAR" />
    </resultMap>
    <!-- 查询单条记录 -->
    <select id="selectUserById" parameterType="int" resultMap="BaseResultMap">
        SELECT * FROM t_user WHERE USER_ID = #{userId}
    </select>
    <!-- 查询单条记录 -->
    <select id="selectUserByName" parameterType="String" resultMap="BaseResultMap">
        SELECT * FROM t_user WHERE USER_NAME = #{userName}
    </select>
    <!-- 更新单条记录 -->
    <update id="updateUserById" parameterType="User">
        UPDATE t_user set  USER_NAME = #{userName} where USER_ID =#{userId}
    </update>

    <!--插入一条数据-->
    <insert id="insertUser" parameterType="User" >
       <!-- <selectKey resultType="int" keyProperty="userId">
            select #{userId}  as USER_ID from dual
        </selectKey>-->
        INSERT into t_user (USER_ID,USER_NAME,USER_PASSWORD,USER_EMAIL) VALUES (#{userId},#{userName},#{userPassword},#{userEmail})
    </insert>

    <!--删除一条数据-->
    <delete id="deleteUserById" parameterType="int">
        DELETE from t_user where USER_ID =#{userId}
    </delete>

    <!--批量插入数据-->
    <insert id="batchInsertUser" parameterType="java.util.List" >
        INSERT into t_user (USER_ID,USER_NAME,USER_PASSWORD,USER_EMAIL)
        <foreach close=")" collection="list" item="item" index="index" open="(" separator="union">
            select
            #{item.userId,jdbcType=INTEGER},
            #{item.userName,jdbcType=VARCHAR},
            #{item.userPassword,jdbcType=VARCHAR},
            #{item.userEmail,jdbcType=VARCHAR}
            from dual
        </foreach>
    </insert>

    <!--批量更新数据-->
    <update id="batchUpdateUser" parameterType="java.util.List" >
        begin
        <foreach collection="list" item="item" index="index" separator=";" >
            update t_user
            <set>
                <if test="item.userId!=null and item.userId!=''">
                    USER_ID = #{item.userId},
                </if>

                <if test="item.userName!=null and item.userName!=''">
                    USER_NAME = #{item.userName},
                </if>

                <if test="item.userPassword!=null and item.userPassword!=''">
                    USER_PASSWORD = #{item.userPassword},
                </if>

                <if test="item.userEmail!=null and item.userEmail!=''">
                    USER_EMAIL = #{item.userEmail},
                </if>

            </set>
            where USER_ID = #{item.userId}
        </foreach>
        ;end;
    </update>

    <!--批量删除-->
    <delete id="batchDeleteUser" parameterType="java.util.List">
        delete from t_user
        <where>
            <foreach collection="list" index="index" item="item" open="(" separator="or" close=")">
                USER_ID=#{item.userId}
            </foreach>
        </where>
    </delete>

    <!-- 批量查询操作 -->
    <select id="batchQueryUser" parameterType="java.util.List" resultMap="BaseResultMap">
        select *
        from t_user where USER_ID in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item.userId}
        </foreach>
    </select>

    <!-- 批量查询操作 -->
    <select id="batchQueryUserMap" parameterType="java.util.List" resultType="java.util.HashMap">
--         select USER_ID as userId ,USER_NAME as userName ,USER_PASSWORD userPassword ,USER_EMAIL as userEmail
        select *
        from t_user where USER_ID in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item.userId}
        </foreach>
    </select>

</mapper>